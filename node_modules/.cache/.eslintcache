[{"/Users/jeromekithinji/Development/react/weather-api/src/index.js":"1","/Users/jeromekithinji/Development/react/weather-api/src/reportWebVitals.js":"2","/Users/jeromekithinji/Development/react/weather-api/src/components/WeatherInfo/WeatherInfo.jsx":"3","/Users/jeromekithinji/Development/react/weather-api/src/App.jsx":"4","/Users/jeromekithinji/Development/react/weather-api/src/components/ToDoList/ToDoList.jsx":"5","/Users/jeromekithinji/Development/react/weather-api/src/components/TodoList/ToDoList.jsx":"6"},{"size":500,"mtime":1643886692272,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1643734190060,"results":"9","hashOfConfig":"8"},{"size":3333,"mtime":1643972424163,"results":"10","hashOfConfig":"8"},{"size":542,"mtime":1644413581571,"results":"11","hashOfConfig":"8"},{"size":6180,"mtime":1644260174592,"results":"12","hashOfConfig":"8"},{"size":4007,"mtime":1644409633900,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"75cbz0",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeromekithinji/Development/react/weather-api/src/index.js",[],[],["34","35"],"/Users/jeromekithinji/Development/react/weather-api/src/reportWebVitals.js",[],[],"/Users/jeromekithinji/Development/react/weather-api/src/components/WeatherInfo/WeatherInfo.jsx",["36"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./WeatherInfo.scss\";\n\nconst WeatherInfo = () => {\n    const [weatherStats, setWeatherStats] = useState(null); //\n    const [userLatitude, setUserLatitude] = useState(null);\n    const [userLongitude, setUserLongitude] = useState(null);\n\n    const successCallback = (position) => {\n        console.log(position);\n        console.log(position.coords.latitude);\n        console.log(position.coords.longitude);\n        setUserLongitude(position.coords.longitude);\n        setUserLatitude(position.coords.latitude);\n    };\n\n    const errorCallback = (error) => {\n        console.error(error);\n    };\n\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n\n    const getWeatherStats = () => {\n        fetch(\n            `http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=${(userLatitude,userLongitude)}&aqi=no`)\n            .then((response) => response.json())\n            .then((jsonResponse) => setWeatherStats(jsonResponse))\n            .catch((err) => console.log(err));\n        // console.log(weatherStats.location.name);\n    };\n\n    const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ];\n\n    const weekday = new Array(7);\n    weekday[0] = \"Sunday\";\n    weekday[1] = \"Monday\";\n    weekday[2] = \"Tuesday\";\n    weekday[3] = \"Wednesday\";\n    weekday[4] = \"Thursday\";\n    weekday[5] = \"Friday\";\n    weekday[6] = \"Saturday\";\n\n    const date = new Date();\n\n    let minutes =\n        date.getMinutes() < 11 ? \"0\" + date.getMinutes() : date.getMinutes();\n    let displayDate =\n        weekday[date.getDay()].toUpperCase() +\n        \" | \" +\n        months[date.getMonth()].toUpperCase().substring(0, 3) +\n        \" \" +\n        date.getDate() +\n        \"  \" +\n        date.getHours() +\n        \":\" +\n        minutes;\n\n    const currentHour = new Date().getHours();\n    let greetingTime = \"Morning!\";\n\n    if (currentHour >= 12) {\n        greetingTime = \"Afternoon!\";\n    }\n\n    if (currentHour >= 18) {\n        greetingTime = \"Evening!\";\n    }\n\n    useEffect(() => {\n        getWeatherStats();\n    }, []);\n\n    return (\n        <div className=\"widget\">\n            <h1 className=\"greeting\">Good {greetingTime} </h1>\n            <div class=\"weatherIconCont\">\n                {weatherStats ? (\n                    <img className=\"weatherIcon\"\n                        src={weatherStats.current.condition.icon}\n                        alt={weatherStats.current.condition.text}\n                    />\n                ) : null}\n            </div>\n            <div class=\"weatherInfo\">\n            {weatherStats ? <div className=\"temperature\"><span>{weatherStats.current.temp_c}&deg;C</span></div> : null}\n                <div class=\"description\">  \n                    {weatherStats ? <h2 className=\"weatherCondition\">{weatherStats.current.condition.text}</h2> : null}  \n                    {weatherStats ? <h2 className=\"place\">{weatherStats.location.name}, {weatherStats.location.country}</h2> : null}\n                </div>\n            </div>\n            <div class=\"date\">{displayDate}</div>\n        </div>\n    );\n};\n\nexport default WeatherInfo;","/Users/jeromekithinji/Development/react/weather-api/src/App.jsx",[],[],"/Users/jeromekithinji/Development/react/weather-api/src/components/ToDoList/ToDoList.jsx",["37","38","39"],[],"/Users/jeromekithinji/Development/react/weather-api/src/components/TodoList/ToDoList.jsx",[],[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":84,"column":8,"nodeType":"46","endLine":84,"endColumn":10,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":8,"column":11,"nodeType":"50","messageId":"51","endLine":8,"endColumn":24},{"ruleId":"48","severity":1,"message":"52","line":37,"column":11,"nodeType":"50","messageId":"51","endLine":37,"endColumn":28},{"ruleId":"48","severity":1,"message":"53","line":44,"column":11,"nodeType":"50","messageId":"51","endLine":44,"endColumn":28},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeatherStats'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-unused-vars","'addTaskButton' is assigned a value but never used.","Identifier","unusedVar","'getRemainingTasks' is assigned a value but never used.","'getCompletedTasks' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [getWeatherStats]",{"range":"59","text":"60"},[2291,2293],"[getWeatherStats]"]