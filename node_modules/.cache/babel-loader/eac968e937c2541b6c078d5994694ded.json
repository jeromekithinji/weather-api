{"ast":null,"code":"var _jsxFileName = \"/Users/jeromekithinji/Development/react/weather-api/src/components/WeatherInfo/WeatherInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./WeatherInfo.scss\";\nimport { geolocation } from \"react-geolocated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherInfo = () => {\n  _s();\n\n  const [weatherStats, setWeatherStats] = useState(null); //\n\n  const [userLatitude, setUserLatitude] = useState(null);\n  const [userLongitude, setUserLongitude] = useState(null);\n\n  const successCallback = position => {\n    console.log(position);\n    console.log(position.coords.latitude);\n    console.log(position.coords.longitude);\n    setUserLongitude(position.coords.longitude);\n    setUserLatitude(position.coords.latitude);\n  };\n\n  const errorCallback = error => {\n    console.error(error);\n  };\n\n  navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n\n  const getWeatherStats = () => {\n    // fetch(\"http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=London&aqi=no\", { mode: 'no-cors'})\n    fetch(\"http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=London&aqi=no\").then(response => response.json()).then(jsonResponse => setWeatherStats(jsonResponse)).catch(err => console.log(err)); // console.log(weatherStats.location.name);\n  };\n\n  useEffect(() => {\n    getWeatherStats();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: weatherStats ? weatherStats.location.name : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), weatherStats ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: weatherStats.location.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }, this) : null, weatherStats ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: weatherStats.current.temp_c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }, this) : null, weatherStats ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: weatherStats.current.condition.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherInfo, \"GteYOe9GFBsTkKWDHkeyQqN9GR4=\");\n\n_c = WeatherInfo;\nexport default WeatherInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"sources":["/Users/jeromekithinji/Development/react/weather-api/src/components/WeatherInfo/WeatherInfo.jsx"],"names":["React","useState","useEffect","geolocation","WeatherInfo","weatherStats","setWeatherStats","userLatitude","setUserLatitude","userLongitude","setUserLongitude","successCallback","position","console","log","coords","latitude","longitude","errorCallback","error","navigator","getCurrentPosition","getWeatherStats","fetch","then","response","json","jsonResponse","catch","err","location","name","current","temp_c","condition","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD,CADsB,CACkC;;AACxD,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMU,eAAe,GAAIC,QAAD,IAAc;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAAT,CAAgBC,QAA5B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAAT,CAAgBE,SAA5B;AACAP,IAAAA,gBAAgB,CAACE,QAAQ,CAACG,MAAT,CAAgBE,SAAjB,CAAhB;AACAT,IAAAA,eAAe,CAACI,QAAQ,CAACG,MAAT,CAAgBC,QAAjB,CAAf;AACH,GAND;;AAQA,QAAME,aAAa,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACH,GAFD;;AAIAC,EAAAA,SAAS,CAACjB,WAAV,CAAsBkB,kBAAtB,CAAyCV,eAAzC,EAA0DO,aAA1D;;AAEA,QAAMI,eAAe,GAAG,MAAM;AAC1B;AACAC,IAAAA,KAAK,CAAC,+FAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,YAAD,IAAkBrB,eAAe,CAACqB,YAAD,CAF3C,EAGKC,KAHL,CAGYC,GAAD,IAAShB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAHpB,EAF0B,CAMtB;AACP,GAPD;;AASA3B,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,EAAb;AAAA,gBAAiBjB,YAAY,GAAGA,YAAY,CAACyB,QAAb,CAAsBC,IAAzB,GAAgC;AAA7D;AAAA;AAAA;AAAA;AAAA,YADJ,EAUK1B,YAAY,gBAAG;AAAA,gBAAKA,YAAY,CAACyB,QAAb,CAAsBC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2C,IAV5D,EAWK1B,YAAY,gBAAG;AAAA,gBAAKA,YAAY,CAAC2B,OAAb,CAAqBC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAH,GAA4C,IAX7D,EAYK5B,YAAY,gBAAG;AAAA,gBAAKA,YAAY,CAAC2B,OAAb,CAAqBE,SAArB,CAA+BC;AAApC;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoD,IAZrE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAjDD;;GAAM/B,W;;KAAAA,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WeatherInfo.scss\";\nimport { geolocation } from \"react-geolocated\";\n\n\nconst WeatherInfo = () => {\n    const [weatherStats, setWeatherStats] = useState(null); //\n    const [userLatitude, setUserLatitude] = useState(null);\n    const [userLongitude, setUserLongitude] = useState(null);\n\n    const successCallback = (position) => { \n        console.log(position);\n        console.log(position.coords.latitude);\n        console.log(position.coords.longitude);\n        setUserLongitude(position.coords.longitude);\n        setUserLatitude(position.coords.latitude);\n    };\n\n    const errorCallback = (error) => {\n        console.error(error);\n    };\n\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n\n    const getWeatherStats = () => {\n        // fetch(\"http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=London&aqi=no\", { mode: 'no-cors'})\n        fetch(\"http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=London&aqi=no\")\n            .then((response) => response.json()) \n            .then((jsonResponse) => setWeatherStats(jsonResponse)) \n            .catch((err) => console.log(err)); \n            // console.log(weatherStats.location.name);\n    }\n\n    useEffect(() => {\n        getWeatherStats();\n    }, []);\n\n    return (\n        <div>\n            <p className=\"\">{weatherStats ? weatherStats.location.name : \"\"}</p>\n            {/* {weatherStats.location.name ? <p className=\"\">{weatherStats.location.name}</p> : null}\n            <p className=\"\">{userLatitude}</p>\n            <p className=\"\">{userLongitude}</p>\n            <p className=\"\">works</p>\n    <h1>Works</h1> */ }\n            {/* <p className=\"tweet__text\">{weatherStats ? weatherStats.current.temp_c : \"\"}</p>\n            <p className=\"tweet__text\">{weatherStats ? weatherStats.current.temp_f: \"\"}</p>\n            <p className=\"tweet__text\">{weatherStats ? weatherStats.current.condition.text : \"\"}</p> */}\n            {weatherStats ? <h1>{weatherStats.location.name}</h1> : null}\n            {weatherStats ? <h1>{weatherStats.current.temp_c}</h1> : null}\n            {weatherStats ? <h1>{weatherStats.current.condition.text}</h1> : null}\n\n        </div>\n    );\n};\n\nexport default WeatherInfo;\n"]},"metadata":{},"sourceType":"module"}