{"ast":null,"code":"var _jsxFileName = \"/Users/jeromekithinji/Development/react/weather-api/src/components/WeatherInfo/WeatherInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./WeatherInfo.scss\";\nimport { geolocation } from \"react-geolocated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherInfo = () => {\n  _s();\n\n  const [weatherStats, setWeatherStats] = useState({\n    city: [{\n      location: {\n        name: \"\"\n      }\n    }],\n    tempCelius: [{\n      currrent: {\n        temp_c: \"\"\n      }\n    }],\n    tempFarenheit: [{\n      currrent: {\n        temp_f: \"\"\n      }\n    }],\n    conditionText: [{\n      condition: {\n        text: \"\"\n      }\n    }],\n    conditionIcon: [{\n      condition: {\n        icon: \"\"\n      }\n    }]\n  });\n  const [userLatitude, setUserLatitude] = useState({});\n  const [userLongitude, setUserLongitude] = useState({});\n\n  const successCallback = position => {\n    console.log(position);\n    console.log(position.coords.latitude);\n    console.log(position.coords.longitude);\n    setUserLongitude(position.coords.longitude);\n    setUserLatitude(position.coords.latitude);\n  };\n\n  const errorCallback = error => {\n    console.error(error);\n  };\n\n  navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n\n  const getWeatherStats = () => {\n    // fetch(\"http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=London&aqi=no\", { mode: 'no-cors'})\n    fetch(\"http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=London&aqi=no\").then(response => response.json()).then(jsonResponse => setWeatherStats(jsonResponse)).catch(err => console.log(err));\n    console.log(weatherStats.location.name);\n  };\n\n  useEffect(() => {\n    getWeatherStats();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherInfo, \"HeRsSUjwbjRF5K3qum6MumWYG2I=\");\n\n_c = WeatherInfo;\nexport default WeatherInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"sources":["/Users/jeromekithinji/Development/react/weather-api/src/components/WeatherInfo/WeatherInfo.jsx"],"names":["React","useState","useEffect","geolocation","WeatherInfo","weatherStats","setWeatherStats","city","location","name","tempCelius","currrent","temp_c","tempFarenheit","temp_f","conditionText","condition","text","conditionIcon","icon","userLatitude","setUserLatitude","userLongitude","setUserLongitude","successCallback","position","console","log","coords","latitude","longitude","errorCallback","error","navigator","getCurrentPosition","getWeatherStats","fetch","then","response","json","jsonResponse","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC;AAC7CM,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAZ,KAAD,CADuC;AAE7CC,IAAAA,UAAU,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAZ,KAAD,CAFiC;AAG7CC,IAAAA,aAAa,EAAE,CAAC;AAAEF,MAAAA,QAAQ,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAV;AAAZ,KAAD,CAH8B;AAI7CC,IAAAA,aAAa,EAAE,CAAC;AAAEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAb,KAAD,CAJ8B;AAK7CC,IAAAA,aAAa,EAAE,CAAC;AAAEF,MAAAA,SAAS,EAAE;AAAEG,QAAAA,IAAI,EAAE;AAAR;AAAb,KAAD;AAL8B,GAAD,CAAhD;AAOA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMuB,eAAe,GAAIC,QAAD,IAAc;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAAT,CAAgBC,QAA5B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAAT,CAAgBE,SAA5B;AACAP,IAAAA,gBAAgB,CAACE,QAAQ,CAACG,MAAT,CAAgBE,SAAjB,CAAhB;AACAT,IAAAA,eAAe,CAACI,QAAQ,CAACG,MAAT,CAAgBC,QAAjB,CAAf;AACH,GAND;;AAQA,QAAME,aAAa,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACH,GAFD;;AAIAC,EAAAA,SAAS,CAAC9B,WAAV,CAAsB+B,kBAAtB,CAAyCV,eAAzC,EAA0DO,aAA1D;;AAEA,QAAMI,eAAe,GAAG,MAAM;AAC1B;AACAC,IAAAA,KAAK,CAAC,+FAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,YAAD,IAAkBlC,eAAe,CAACkC,YAAD,CAF3C,EAGKC,KAHL,CAGYC,GAAD,IAAShB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAHpB;AAIIhB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,YAAY,CAACG,QAAb,CAAsBC,IAAlC;AACP,GAPD;;AASAP,EAAAA,SAAS,CAAC,MAAM;AACZiC,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CApDD;;GAAM/B,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WeatherInfo.scss\";\nimport { geolocation } from \"react-geolocated\";\n\n\nconst WeatherInfo = () => {\n    const [weatherStats, setWeatherStats] = useState({\n        city: [{ location: { name: \"\" } }],\n        tempCelius: [{ currrent: { temp_c: \"\" } }],\n        tempFarenheit: [{ currrent: { temp_f: \"\" } }],\n        conditionText: [{ condition: { text: \"\" } }],\n        conditionIcon: [{ condition: { icon: \"\" } }]\n    });\n    const [userLatitude, setUserLatitude] = useState({});\n    const [userLongitude, setUserLongitude] = useState({});\n\n    const successCallback = (position) => { \n        console.log(position);\n        console.log(position.coords.latitude);\n        console.log(position.coords.longitude);\n        setUserLongitude(position.coords.longitude);\n        setUserLatitude(position.coords.latitude);\n    };\n\n    const errorCallback = (error) => {\n        console.error(error);\n    };\n\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n\n    const getWeatherStats = () => {\n        // fetch(\"http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=London&aqi=no\", { mode: 'no-cors'})\n        fetch(\"http://api.weatherapi.com/v1/current.json?key=e38763e617664e56ab8162340220102&q=London&aqi=no\")\n            .then((response) => response.json()) \n            .then((jsonResponse) => setWeatherStats(jsonResponse)) \n            .catch((err) => console.log(err)); \n            console.log(weatherStats.location.name);\n    }\n\n    useEffect(() => {\n        getWeatherStats();\n    }, []);\n\n    return (\n        <div>\n            {/* <p className=\"\">{weatherStats ? weatherStats.location.name : \"\"}</p> */}\n            {/* {weatherStats.location.name ? <p className=\"\">{weatherStats.location.name}</p> : null}\n            <p className=\"\">{userLatitude}</p>\n            <p className=\"\">{userLongitude}</p>\n            <p className=\"\">works</p>}\n            <h1>Works</h1>\n            {/* <p className=\"tweet__text\">{weatherStats ? weatherStats.current.temp_c : \"\"}</p>\n            <p className=\"tweet__text\">{weatherStats ? weatherStats.current.temp_f: \"\"}</p>\n            <p className=\"tweet__text\">{weatherStats ? weatherStats.current.condition.text : \"\"}</p> */}\n            <h1>Works</h1>\n        </div>\n    );\n};\n\nexport default WeatherInfo;\n"]},"metadata":{},"sourceType":"module"}